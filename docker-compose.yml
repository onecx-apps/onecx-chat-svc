services:
  postgresdb:
    image: bitnami/postgresql:12
    networks:
      - onecx-net
    environment:
      POSTGRES_PASSWORD: admin
      # POSTGRES_DB: postgres
      # POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:      
    - postgres:/var/lib/postgresql/data      
    - ./db/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  onecx-chat-svc:
#    image: ghcr.io/onecx-apps/onecx-chat-svc:0.0.0-rc.16
    image: localhost/onecx-chat-svc:999-SNAPSHOT
    networks:
      - onecx-net
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_chat
      QUARKUS_DATASOURCE_PASSWORD: onecx_chat
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx-chat?sslmode=disable"
      QUARKUS_REST_CLIENT_ONECX_AI_SVC_URL: "http://onecx-ai-svc:8080/internal/ai/"
      QUARKUS_OIDC_AUTH_SERVER_URL: "http://keycloak-app:8080/realms/onecx"
    ports:
      - "8081:8080"
    depends_on:
      postgresdb:
        condition: service_healthy

  onecx-ai-svc:
    image: localhost/onecx-ai-quarkus-svc:999-SNAPSHOT
    networks:
      - onecx-net
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_ai
      QUARKUS_DATASOURCE_PASSWORD: onecx_ai
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx-ai?sslmode=disable"
    ports:
      - "8080:8080"
    depends_on:
      postgresdb:
        condition: service_healthy

volumes:
  postgres:
networks:
  onecx-net:
    driver: bridge
